\set PROMPT1 '%n@%M:%>%x %/# '
\set HISTFILE ~/.psql/psql_history- :HOST - :DBNAME
\set HISTSIZE 2000

\pset linestyle unicode
\pset border 2
\pset null Â¤
\pset format wrapped

\timing

\set show_slow_queries 'SELECT (total_time / 1000 / 60) as total_minutes, (total_time/calls) as average_time, query FROM pg_stat_statements ORDER BY 1 DESC LIMIT 100;'

-- Throw more RAM in if this is not close to 0.99
-- Or look at effective_cache_size in postgresql.conf - set it to 3/4 of available RAM to cache more aggresively
\set cache_hit_rate 'SELECT sum(heap_blks_read) as heap_read, sum(heap_blks_hit) as heap_hit, sum(heap_blks_hit) / (sum(heap_blks_hit) + sum(heap_blks_read)) as ratio FROM pg_statio_user_tables;'

\set index_hit_rate 'SELECT relname, 100 * idx_scan / (seq_scan + idx_scan) percent_of_times_index_used, n_live_tup rows_in_table FROM pg_stat_user_tables WHERE seq_scan + idx_scan > 0 ORDER BY n_live_tup DESC;'

\set uptime 'select now() - pg_postmaster_start_time() AS uptime;'

\set dbsize 'SELECT datname, pg_size_pretty(pg_database_size(datname)) db_size FROM pg_database ORDER BY db_size;'
